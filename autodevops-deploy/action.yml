name: "Deploy"
description: "Deploy over Kubernetes"
inputs:
  environment:
    description: "The deployment environment (dev | preprod | prod)"
  kubeconfig:
    description: "The Kubernetes authentication configuration"
  token:
    description: "The Github authentication token"
  rancherId:
    description: "The Rancher project ID"
outputs:
  url:
    description: "Main URL extracted from kube manifests"
    value: ${{ steps.environment-url.outputs.url }}
runs:
  using: "composite"
  steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Download k8s namespace
      uses: actions/download-artifact@v2
      with:
        name: namespace-${{ inputs.environment }}.yml

    - name: Download k8s manifests
      uses: actions/download-artifact@v2
      with:
        name: manifests-${{ inputs.environment }}.yml

    - name: Get namespace name
      uses: mikefarah/yq@master
      id: namespace
      with:
        cmd: yq eval '.metadata.name' namespace-${{ inputs.environment }}.yml

    - name: Get project and namespace names
      shell: bash
      run: |
        if test -f ".github/${{ inputs.environment }}.env"; then
          cat ".github/${{ inputs.environment }}.env" >> $GITHUB_ENV
        fi
        echo "project=${GITHUB_REPOSITORY#*/}" >> $GITHUB_ENV
        echo "namespace=${NAMESPACE}" >> $GITHUB_ENV
      env:
        NAMESPACE: ${{ steps.namespace.outputs.result }}

    - name: Notify deployment start
      uses: bobheadxi/deployments@v0.4.3
      id: deployment
      with:
        step: start
        token: ${{ inputs.token }}
        desc: "Deploying environment: ${{ env.namespace }}"
        env: ${{ inputs.environment == 'dev' && env.namespace || inputs.environment == 'preproduction' && 'preproduction' || 'production' }}

    - name: Install Kapp
      uses: vmware-tanzu/carvel-setup-action@v1
      with:
        only: kapp
        token: ${{ inputs.token }}

    - name: Create kubernetes config
      shell: bash
      run: |
        mkdir ~/.kube
        touch ~/.kube/config
        echo ${{ inputs.kubeconfig }} | base64 -d > ~/.kube/config

    - name: Create k8s namespace
      shell: bash
      run: |
        if [ $ENVIRONMENT != "prod" ]; then
          kubectl create -f namespace-${ENVIRONMENT}.yml || true
        fi
      env:
        ENVIRONMENT: ${{ inputs.environment }}

    - name: Deploy application
      shell: bash
      run: |
        sleep 3
        kapp --dangerous-override-ownership-of-existing-resources -y deploy -a ${{ env.project }} --namespace ${{ env.namespace }} -f manifests-${{ inputs.environment }}.yml

    - name: Define environment URL
      id: environment-url
      shell: bash
      run: |
        HOST=$(cat manifests-${{ inputs.environment }}.yml | yq eval-all '.spec.rules[] .host' - | head -n 1)
        echo $HOST
        echo "::set-output name=url::https://$HOST"

    - name: Notify deployment end
      uses: bobheadxi/deployments@v0.4.3
      with:
        step: finish
        status: ${{ job.status }}
        token: ${{ inputs.token }}
        deployment_id: ${{ steps.deployment.outputs.deployment_id }}
        env_url: ${{ steps.environment-url.outputs.url }}

    - name: Debug manifests
      uses: socialgouv/actions/k8s-manifests-debug@master
      with:
        token: ${{ inputs.token }}
        path: manifests-${{ inputs.environment }}.yml
      env:
        RANCHER_PROJECT_ID: ${{ inputs.rancherId }}
