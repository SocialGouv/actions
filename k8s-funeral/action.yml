name: "Deactivate"
description: "Bury the review branch k8s environment"
inputs:
  kube-config:
    description: "The base64 of the kubeconfig"
  github-token:
    description: "GitHub Token as provided by secrets"
    default: ${{ github.token }}
    required: true
  rancherId:
    description: "The Rancher project ID, usually secrets.RANCHER_PROJECT_ID"
  socialgouvBaseDomain:
    description: "The base domain name, usually secrets.SOCIALGOUV_BASE_DOMAIN"

outputs: {}

runs:
  using: "composite"
  steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Load environment variables
      shell: bash
      run: |
        if test -f ".github/dev.env"; then
          cat ".github/dev.env" >> $GITHUB_ENV
        fi

    - name: Yarn cache setup
      uses: c-hive/gha-yarn-cache@v1

    - name: Install kosko-charts autodevops
      shell: bash
      run: |
        npx degit SocialGouv/kosko-charts/templates/autodevops /tmp/autodevops
        yarn --cwd /tmp/autodevops

    - name: Copy application k8s config to autodevops
      shell: bash
      run: |
        if [ -f ".socialgouv/environments" ]; then
          cp -r .socialgouv/environments /tmp/autodevops/
        fi
        cp .socialgouv/config.json /tmp/autodevops/

    - name: Generate k8s namespace
      shell: bash
      run: |
        yarn --cwd /tmp/autodevops --silent generate --env dev _namespace > namespace-dev.yml
      env:
        ENVIRONMENT: dev
        SOCIALGOUV_CONFIG_PATH: /tmp/autodevops/config.json
        ANCHER_PROJECT_ID: ${{ inputs.rancherId || env.RANCHER_PROJECT_ID }}
        SOCIALGOUV_BASE_DOMAIN: ${{ inputs.socialgouvBaseDomain || env.SOCIALGOUV_BASE_DOMAIN }}

    - name: Get namespace name
      uses: mikefarah/yq@master
      id: namespace
      with:
        cmd: yq eval '.metadata.name' namespace-dev.yml

    - name: Inject slug/short variables
      uses: rlespinasse/github-slug-action@3.5.1

    - name: Get branch, project and namespace names
      shell: bash
      run: |
        echo "branch=${GITHUB_HEAD_REF_SLUG_URL}" >> $GITHUB_ENV
        echo "project=${GITHUB_REPOSITORY_NAME_PART_SLUG_URL}" >> $GITHUB_ENV
        echo "namespace=${NAMESPACE}" >> $GITHUB_ENV
      env:
        NAMESPACE: ${{ steps.namespace.outputs.result }}

    - name: Get branch, project and namespace names
      shell: bash
      run: |
        echo "branch : ${{ env.branch }}" 
        echo "project : ${{ env.project }}" 
        echo "namespace : ${{ env.namespace }}"

    - name: Install Kapp
      uses: vmware-tanzu/carvel-setup-action@v1
      with:
        only: kapp
        token: ${{ inputs.github-token }}

    - name: Debug kapp version
      shell: bash
      run: kapp --version

    - name: Create kubernetes config
      shell: bash
      run: |
        mkdir ~/.kube
        echo "${{ inputs.kube-config }}" | base64 -d > ~/.kube/config

    - name: Delete k8s environment
      shell: bash
      run: |
        echo "kapp delete --yes --namespace ${{ env.namespace }}"
        kapp delete --yes --app ${{ env.project }} --namespace ${{ env.namespace }}
        echo "ðŸª¦"

    - name: Mark environment as deactivated
      uses: bobheadxi/deployments@v0.4.3
      with:
        step: deactivate-env
        env: ${{ env.branch }}
        token: ${{ inputs.github-token }}
        desc: "Environment ${{ env.namespace }} has been deactivated"
