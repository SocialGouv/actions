name: "Drop database"
description: "Drop database and user"
inputs:
  kubeconfig:
    description: "The Kubernetes authentication configuration"
  rancherId:
    description: "The Rancher project ID, usually secrets.RANCHER_PROJECT_ID"
  adminPgSecret:
    description: "PG Secret admin secretRefName"
  pgUserAddHostSuffix:
    description: "Add user suffix `@hostname`, muste be true for Azure, false for Scaleway, if not provided it autodetect azure using PGHOST"

runs:
  using: "composite"
  steps:

    - name: Checkout repository
      uses: actions/checkout@v2
    
    - name: Enable Relative Github Actions
      uses: socialgouv/actions/util-enable-relative-gh-actions
      with:
        actionPath: ${{ github.action_path }}

    - name: Setup global env vars
      uses: ./.socialgouv/actions/util-env
      with:
        rancherId: ${{ inputs.rancherId }}
    
    - name: Setup action bin PATH
      shell: bash
      run: echo "${{ github.action_path }}/bin" >> $GITHUB_PATH

    - name: Setup action's env vars
      shell: bash
      run: |
        ADMIN_PG_SECRET="${{ inputs.adminPgSecret || env.ADMIN_PG_SECRET || 'azure-pg-admin-user' }}"

        PG_USER_ADD_HOST_SUFFIX=${{ inputs.pgUserAddHostSuffix || env.PG_USER_ADD_HOST_SUFFIX }}
        if [ "$PG_USER_ADD_HOST_SUFFIX" != "false" ] && [[ $PGHOST == *"azure.com"* ]]; then
          PG_USER_ADD_HOST_SUFFIX="true"
        fi
        if [ "$PG_USER_ADD_HOST_SUFFIX" ] && [ "$PG_USER_ADD_HOST_SUFFIX" != "false" ]; then
          PGUSER_SUFFIX="@${PGHOST}"
        else
          PGUSER_SUFFIX=""
        fi
        if [ "$SOCIALGOUV_PRODUCTION" ]; then
          DB_NAME=$SOCIALGOUV_PRODUCTION_NAMESPACE
          DB_USER=$SOCIALGOUV_PRODUCTION_NAMESPACE
        elif [ "$SOCIALGOUV_PREPRODUCTION" ]; then
          DB_NAME="preprod"
          DB_USER="preprod${PGUSER_SUFFIX}"
        else
          DB_NAME="autodevops_${BRANCH_SLUG}"
          DB_USER="user_${BRANCH_SLUG}${PGUSER_SUFFIX}"
        fi

        echo "ADMIN_PG_SECRET=$ADMIN_PG_SECRET" >> $GITHUB_ENV
        echo "DB_NAME=$DB_NAME" >> $GITHUB_ENV
        echo "DB_USER=$DB_USER" >> $GITHUB_ENV

    - name: Write kubeconfig
      uses: ./.socialgouv/actions/util-write-kubeconfig
      with:
        kubeconfig: ${{ inputs.kubeconfig }}
      
    - name: Setup node
      uses: ./.socialgouv/actions/util-setup-node
      with:
        actionPath: ${{ github.action_path }}
    
    - name: Run drop-db job
      uses: ./.socialgouv/actions/util-run-job
      with:
        jobNamespace: ${{ env.JOB_NAMESPACE }}
        jobName: drop-db-${{ env.BRANCH_SLUG }}
        jobTemplatePath: ${{ github.action_path }}/templates/job.drop-db.gtpl
        actionPath: ${{ github.action_path }}

    - name: Wait for drop-db job completion
      uses: ./.socialgouv/actions/util-wait-job
      with:
        jobNamespace: ${{ env.JOB_NAMESPACE }}
        jobName: drop-db-${{ env.BRANCH_SLUG }}
    
