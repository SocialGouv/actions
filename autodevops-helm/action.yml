name: "Autodevops"
description: "SocialGouv automated deployment"
inputs:
  imageName:
    description: "The image registry path"
  dockerfile:
    description: "The docker file path"
  dockerbuildargs:
    description: "The docker build arguments"
  token:
    description: "The GHCR authentication token"
  kubeconfig:
    description: "The Kubernetes authentication config"
  environment:
    description: "The deployment environment (dev | preprod | prod)"
  rancherId:
    description: "The Rancher project ID"
  rancherProjectName:
    description: "The Rancher project name, usually secrets.RANCHER_PROJECT_NAME, usefull jobs that needs secrets or ci namespaces"
  baseNamespace:
    description: "Override base namespace, default repository name"
  baseSubdomain:
    description: "Override base subdomain, default repository name"
  socialgouvBaseDomain:
    description: "The base domain name, usually secrets.SOCIALGOUV_BASE_DOMAIN"
  productionHost:
    description: "Override production host"
outputs:
  url:
    description: "Main URL extracted from kube manifests"
    value: ${{ steps.deploy.outputs.url }}

runs:
  using: "composite"
  steps:

  - name: Use autodevops build and register
    uses: SocialGouv/actions/autodevops-build-register@refacto-j
    with:
      token: ${{ inputs.token }}
      imageName: ${{ inputs.imageName }}
      dockerfile: ${{ inputs.dockerfile }}
      environment:  ${{ inputs.environment }}
      dockerbuildargs: ${{ inputs.dockerbuildargs }}

  - name: Use autodevops helm deployment
    id: deploy
    uses: SocialGouv/actions/autodevops-helm-deploy@refacto-j
    with:
      token: ${{ inputs.token }}
      rancherId: ${{ inputs.rancherId }}
      rancherProjectName: ${{ inputs.rancherProjectName }}
      kubeconfig: ${{ inputs.kubeconfig }}
      environment: ${{ inputs.environment }}
      baseNamespace: ${{ inputs.baseNamespace }}
      baseSubdomain: ${{ inputs.baseSubdomain }}
      socialgouvBaseDomain: ${{ inputs.socialgouvBaseDomain }}
      productionHost: ${{ inputs.productionHost }}
      imageName: ${{ inputs.imageName }}