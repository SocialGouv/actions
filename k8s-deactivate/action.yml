name: Deactivate
description: "Delete review branch environment and database"
inputs:
  kube-config:
    description: "The base64 of the kubeconfig"
  github-token:
    description: "GitHub Token as provided by secrets"
    default: ${{ github.token }}
    required: true
  rancherId:
    description: "The Rancher project ID, usually secrets.RANCHER_PROJECT_ID"
  socialgouvBaseDomain:
    description: "The base domain name, usually secrets.SOCIALGOUV_BASE_DOMAIN"

runs:
  using: "composite"
  steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Load environment variables
      shell: bash
      run: |
        if test -f ".github/dev.env"; then
          cat ".github/dev.env" >> $GITHUB_ENV
        fi

    - name: Yarn cache setup
      uses: c-hive/gha-yarn-cache@v2
      with:
        directory: .k8s

    - name: Install kosko-charts dependencies
      shell: bash
      run: yarn --cwd .k8s install --frozen-lockfile --prefer-offline

    - name: Generate k8s namespace
      shell: bash
      run: |
        GITHUB_REF=$GITHUB_HEAD_REF
        yarn --cwd .k8s --silent generate --env dev _namespace > namespace-dev.yml
      env:
        RANCHER_PROJECT_ID: ${{ inputs.rancherId || env.RANCHER_PROJECT_ID }}
        SOCIALGOUV_BASE_DOMAIN: ${{ inputs.socialgouvBaseDomain || env.SOCIALGOUV_BASE_DOMAIN }}

    - name: Get namespace name
      uses: mikefarah/yq@v4.13.4
      id: namespace
      with:
        cmd: yq eval '.metadata.name' namespace-dev.yml

    - name: Inject slug/short variables
      uses: rlespinasse/github-slug-action@3.5.1

    - name: Get branch, project and namespace names
      shell: bash
      run: |
        echo "branch=${GITHUB_HEAD_REF_SLUG_URL}" >> $GITHUB_ENV
        echo "project=${GITHUB_REPOSITORY_NAME_PART_SLUG_URL}" >> $GITHUB_ENV
        echo "namespace=${NAMESPACE}" >> $GITHUB_ENV
      env:
        NAMESPACE: ${{ steps.namespace.outputs.result }}

    - name: Log branch, project and namespace names
      shell: bash
      run: |
        echo "branch : ${{ env.branch }}" 
        echo "project : ${{ env.project }}" 
        echo "namespace : ${{ env.namespace }}"

    - name: Create kubernetes config
      shell: bash
      run: |
        mkdir ~/.kube
        echo "${{ inputs.kube-config }}" | base64 -d > ~/.kube/config

    - name: Define environment URL
      id: environment-url
      shell: bash
      run: |
        HOST=$(cat manifests-dev.yml | yq eval-all '.spec.rules[] .host' -)
        ONE_LINE_HOST=$(echo $HOST | xargs echo -n)
        echo $ONE_LINE_HOST
        echo "::set-output name=url::$ONE_LINE_HOST"

    - name: Format the URL
      uses: actions/github-script@v5
      id: array-url
      env:
        url: ${{ steps.environment-url.outputs.url }}
      with:
        script: |
          const urlArray = JSON.stringify(process.env.url.split(" --- ").map(v => v.replace(/ /g, "")).map(v => `https://${v}`));
          process.stdout.write(`::set-output name=url::${urlArray}`);

    - name: Delete k8s environment
      shell: bash
      run: |
        echo "kubectl delete -f ./namespace-dev.yml"
        kubectl delete -f ./namespace-dev.yml || true
        echo "ðŸª¦"

    - name: Mark environment as deactivated
      uses: bobheadxi/deployments@v0.4.3
      with:
        step: deactivate-env
        token: ${{ inputs.github-token }}
        envs: ${{ steps.array-url.outputs.url }}
        desc: "Environment ${{ env.namespace }} has been deactivated"
