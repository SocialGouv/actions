name: "Build and Register"
description: "Build and register a docker image on ghcr.io"
inputs:
  imageName:
    description: "The image registry path, defaults to repository name"
  imagePackage:
    description: "The image registry subpath"
  dockerfile:
    default: './Dockerfile'
    description: "The docker file path"
  dockercontext:
    default: '.'
    description: "The docker build context"
  dockerbuildargs:
    description: "The docker build arguments"
  token:
    description: "The GHCR authentication token"
  environment:
    default: 'dev'
    description: "The deployment environment (dev | preprod | prod)"


runs:
  using: "composite"
  steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Get variables
      id: variables
      shell: bash
      run: |
        REPOSITORY_NAME=${GITHUB_REPOSITORY#*/}
        
        IMAGE_NAME="${{ inputs.imageName }}"
        if [ -z "$IMAGE_NAME" ]; then
          IMAGE_NAME="$REPOSITORY_NAME"
        fi

        IMAGE_PACKAGE="${{ inputs.imagePackage }}"
        if [ -n "$IMAGE_PACKAGE" ]; then
          IMAGE_NAME+="/$IMAGE_PACKAGE"
        fi
        
        echo "::set-output name=repository-name::$REPOSITORY_NAME"
        echo "::set-output name=image-name::$IMAGE_NAME"

    - name: Create image labels and tags
      id: docker_meta
      uses: "crazy-max/ghaction-docker-meta@2e1a5c7fa42123697f82d479b551a1bbdb1bef88"
      with:
        images: ghcr.io/socialgouv/${{ steps.variables.outputs.image-name }}
        labels: |
          org.opencontainers.image.title=${{ steps.variables.outputs.repository-name }}
          org.opencontainers.image.documentation=https://github.com/${{ github.repository }}/tree/${{ github.sha }}
        tags: |
          type=sha
          type=ref,event=pr
          type=ref,event=branch
          type=semver,pattern={{version}}
          type=raw,value=sha-${{ github.sha }}
          type=semver,pattern={{major}}.{{minor}}
          type=raw,value=${{ startsWith(github.ref, 'refs/tags/v') && 'prod' || inputs.environment }}
          type=raw,value=${{ startsWith(github.ref, 'refs/tags/v') && 'prod' || inputs.environment }}-${{ github.sha }}

    - name: Set up Buildx
      id: buildx
      uses: docker/setup-buildx-action@master
      with:
        install: true

    - name: Registry authentication
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ inputs.token }}

    - name: Image build and register
      uses: docker/build-push-action@v2
      with:
        push: "true"
        file: "${{ inputs.dockerfile }}"
        context: ${{ inputs.dockercontext }}
        builder: ${{ steps.buildx.outputs.name }}
        build-args: ${{ inputs.dockerbuildargs }}
        tags: "${{ steps.docker_meta.outputs.tags }}"
        labels: "${{ steps.docker_meta.outputs.labels }}"
        cache-from: "type=gha,scope=${{ inputs.imageName }}-cache"
        cache-to: "type=gha,scope=${{ inputs.imageName }}-cache,mode=max"
