name: "Create database"
description: "Create database and user using random secure"
inputs:
  kubeconfig:
    description: "The Kubernetes authentication configuration"
  rancherId:
    description: "The Rancher project ID, usually secrets.RANCHER_PROJECT_ID"
  adminPgSecret:
    description: "PG Secret admin secretRefName"
  pgUserAddHostSuffix:
    description: "Add user suffix `@hostname`, muste be true for Azure, false for Scaleway, if not provided it autodetect azure using PGHOST"

runs:
  using: "composite"
  steps:

    - name: Checkout repository
      uses: actions/checkout@v2
    
    - name: Enable Relative Github Actions
      uses: socialgouv/actions/util-enable-relative-gh-actions@devthejo/debug-relatives-actions-branch-name-withSpecCharactersAndVeryLongName
      with:
        actionPath: ${{ github.action_path }}

    - name: Setup global env vars
      uses: ./.actions/util-env
      with:
        rancherId: ${{ inputs.rancherId }}
    
    - name: Setup action bin PATH
      shell: bash
      run: echo "${{ github.action_path }}/bin" >> $GITHUB_PATH

    - name: Setup action's env vars
      shell: bash
      run: |
        ADMIN_PG_SECRET="${{ inputs.adminPgSecret || env.ADMIN_PG_SECRET || 'azure-pg-admin-user' }}"
        if [ "$SOCIALGOUV_PRODUCTION" ]; then
          DB_SECRET_NAME=pg-user
        elif [ "$SOCIALGOUV_PREPRODUCTION" ]; then
          DB_SECRET_NAME=pg-user-preprod
        else
          DB_SECRET_NAME="pg-user-${BRANCH_SLUG}"
        fi

        echo "DB_SECRET_NAME=$DB_SECRET_NAME" >> $GITHUB_ENV
        echo "ADMIN_PG_SECRET=$ADMIN_PG_SECRET" >> $GITHUB_ENV
    
    - name: Write kubeconfig
      uses: ./.actions/util-write-kubeconfig
      with:
        kubeconfig: ${{ inputs.kubeconfig }}

    - name: Setup node
      uses: ./.actions/util-setup-node
      with:
        actionPath: ${{ github.action_path }}

    - name: Generate values file
      shell: bash
      run: yarn --cwd ${{ github.action_path }} run -s values > values.json

    - name: Archive values.json
      uses: actions/upload-artifact@v2
      with:
        name: values.json
        path: values.json

    - name: Ensure namespace exists
      uses: ./.actions/util-ensure-namespace
      with:
        namespace: ${{ env.NAMESPACE }}
        rancherId: ${{ env.RANCHER_PROJECT_ID }}

    - name: Create secret
      shell: bash
      env:
        PG_USER_ADD_HOST_SUFFIX: ${{ inputs.pgUserAddHostSuffix || env.PG_USER_ADD_HOST_SUFFIX || '' }}
      run: |
        create-secret
        echo "copy secret '$DB_SECRET_NAME' to '$JOB_NAMESPACE'"
        copy-secret $DB_SECRET_NAME $NAMESPACE $JOB_NAMESPACE

    - name: Run create-db job
      uses: ./.actions/util-run-job
      with:
        jobNamespace: ${{ env.JOB_NAMESPACE }}
        jobName: create-db-user-${{ env.BRANCH_SLUG }}
        jobTemplatePath: ${{ github.action_path }}/templates/job.create-db.gtpl
        gomplateArgs: -d values.json
        actionPath: ${{ github.action_path }}

    - name: Wait for create-db job completion
      uses: ./.actions/util-wait-job
      with:
        jobNamespace: ${{ env.JOB_NAMESPACE }}
        jobName: create-db-user-${{ env.BRANCH_SLUG }}
    