name: "Autodevops deploy"
description: "Autodevops deploy using Helm template and kapp"
inputs:
  environment:
    default: 'dev'
    description: "The deployment environment (dev | preprod | prod)"
  kubeconfig:
    description: "The Kubernetes authentication configuration"
  token:
    description: "The Github authentication token"
  rancherId:
    description: "The Rancher project ID, usually secrets.RANCHER_PROJECT_ID"
  rancherProjectName:
    description: "The Rancher project name, usually secrets.RANCHER_PROJECT_NAME, usefull jobs that needs secrets or ci namespaces"
  baseNamespace:
    description: "Override base namesapce, default repository name"
  baseSubdomain:
    description: "Override base subdomain, default repository name"
  socialgouvBaseDomain:
    description: "The base domain name, usually secrets.SOCIALGOUV_BASE_DOMAIN"
  productionHost:
    description: "Override production host"
  imageName:
    description: "The image registry path"
outputs:
  url:
    description: "Main deployment URL"
    value: ${{ steps.environment-url.outputs.url }}
runs:
  using: "composite"
  steps:

    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Setup global env vars
      uses: SocialGouv/actions/util-env@refacto-j
      with:
        environment: ${{ inputs.environment }}
        rancherId: ${{ inputs.rancherId }}
        rancherProjectName: ${{ inputs.rancherProjectName }}
        baseNamespace: ${{ inputs.baseNamespace }}
        baseSubdomain: ${{ inputs.baseSubdomain }}
    
    - name: Setup node
      uses: SocialGouv/actions/util-setup-node@refacto-j
      with:
        actionPath: ${{ github.action_path }}

    # start building manifests

    - name: Build manifests
      shell: bash
      env:
        BASE_DOMAIN: ${{ inputs.socialgouvBaseDomain }}
        PRODUCTION_HOST: ${{ inputs.productionHost }}
        IMAGE_NAME: ${{ inputs.imageName }}
      working-directory: ${{ env.AUTODEVOPS_PATH }}
      run: $GITHUB_ACTION_PATH/build-manifests.sh

    - name: Archive values
      uses: actions/upload-artifact@v2
      with:
        name: values.env-${{ inputs.environment }}.yaml
        path: ${{ env.AUTODEVOPS_PATH }}/values.env.yaml

    - name: Archive manifest
      uses: actions/upload-artifact@v2
      with:
        name: manifests-${{ inputs.environment }}.yaml
        path: ${{ env.AUTODEVOPS_PATH }}/manifests.yaml
    
    # end building manifests

    - name: Notify deployment start
      uses: bobheadxi/deployments@v0.4.3
      id: deployment
      with:
        step: start
        token: ${{ inputs.token }}
        desc: "Deploying environment: ${{ env.NAMESPACE }}"
        env: ${{ inputs.environment == 'dev' && env.namespace || inputs.environment == 'preproduction' && 'preproduction' || 'production' }}
        
    - name: Install Kapp
      uses: vmware-tanzu/carvel-setup-action@refacto-j
      with:
        only: kapp
        token: ${{ inputs.token }}

    - name: Write kubeconfig
      uses: SocialGouv/actions/util-write-kubeconfig@refacto-j
      with:
        kubeconfig: ${{ inputs.kubeconfig }}

    - name: Create k8s namespace
      shell: bash
      working-directory: ${{ env.AUTODEVOPS_PATH }}
      run: |
        cat manifests.yaml | yq eval 'select(.kind=="Namespace")' - > namespace.yaml

        kubectl create -f namespace.yaml || true
        
        # wait for namespace to be ready
        n=0
        until [ "$n" -ge 10 ]; do
          command && break  # substitute your command here
          namespaceStatus=$(kubectl get ns $NAMESPACE -o json | jq .status.phase -r)
          [ $namespaceStatus == "Active" ] && break
          n=$((n+1))
          sleep 1
        done
    
    - name: Apply manifests and wait for sync using kapp
      shell: bash
      working-directory: ${{ env.AUTODEVOPS_PATH }}
      run: |
        kapp \
          deploy \
          --app $REPOSITORY_NAME \
          --namespace $NAMESPACE \
          --logs-all \
          --yes \
          -f manifests.yaml

    - name: Define environment URL
      id: environment-url
      shell: bash
      working-directory: ${{ env.AUTODEVOPS_PATH }}
      run: |
        HOSTS=$(cat manifests.yaml | yq eval-all '.spec.rules[] .host')
        HOST=$(echo "$HOSTS" | head -n 1)
        echo $HOST
        echo "::set-output name=url::https://$HOST"

    - name: Notify deployment end
      uses: bobheadxi/deployments@v0.4.3
      with:
        step: finish
        status: ${{ job.status }}
        token: ${{ inputs.token }}
        deployment_id: ${{ steps.deployment.outputs.deployment_id }}
        env_url: ${{ steps.environment-url.outputs.url }}

    - name: Debug manifests
      uses: SocialGouv/actions/k8s-manifests-debug@refacto-j
      with:
        token: ${{ inputs.token }}
        path: ${{ env.AUTODEVOPS_PATH }}/manifests.yaml