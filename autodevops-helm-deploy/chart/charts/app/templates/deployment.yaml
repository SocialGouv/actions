apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    component: {{ .Chart.Name }}
    application: {{ .Values.global.projectName }}
  name: app
  namespace: {{ .Values.global.namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      component: {{ .Chart.Name }}
  template:
    metadata:
      labels:
        component: {{ .Chart.Name }}
        application: {{ .Values.global.projectName }}
    spec:
      containers:
        - image: "{{ .Values.global.registry }}:{{ .Values.imageTag }}"
          livenessProbe:
            failureThreshold: 6
            httpGet:
              path: {{ .Values.probesPath }}
              port: http
            initialDelaySeconds: 30
            periodSeconds: 5
            timeoutSeconds: 5
          name: app
          ports:
            - containerPort: {{ .Values.containerPort }}
              name: http
          readinessProbe:
            failureThreshold: 15
            httpGet:
              path: {{ .Values.probesPath }}
              port: http
            initialDelaySeconds: 0
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 500m
              memory: 128Mi
            requests:
              cpu: 5m
              memory: 32Mi
          startupProbe:
            failureThreshold: 12
            httpGet:
              path: {{ .Values.probesPath }}
              port: http
            periodSeconds: 5
          {{- if or .Values.envSecretName .Values.envConfigName }}
          envFrom:
            {{- if .Values.envSecretName }}
            - secretRef:
                name: "{{ .Values.envSecretName }}"
            {{- end }}
            {{- if .Values.envConfigName }}
            - configMapRef:
                name: "{{ .Values.envConfigName }}"
            {{- end }}
          {{- end }}